syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sir-hassan/grpc-service-user/api";

service UserStore {
  rpc CheckHealth(CheckHealthRequest) returns (CheckHealthReply);
  rpc AddUser(AddUserRequest) returns (AddUserReply);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserReply);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserReply);
  rpc ListUsers(ListUsersRequest) returns (stream User);
}

message CheckHealthRequest {
}

message CheckHealthReply {
  bool is_healthy = 1 [json_name = "is_healthy"];
}

message User {
  string id = 1;
  string first_name = 2 [json_name = "first_name"];
  string last_name = 3 [json_name = "last_name"];
  string nickname = 4;
  string password = 5;
  string email = 6;
  string country = 7;

  google.protobuf.Timestamp created_at = 8 [json_name = "created_at"];
  google.protobuf.Timestamp updated_at = 9 [json_name = "updated_at"];
}

message AddUserRequest {
  string first_name = 1 [json_name = "first_name"];
  string last_name = 2 [json_name = "last_name"];
  string nickname = 3;
  string password = 4;
  string email = 5;
  string country = 6;
}

message AddUserReply {
  string id = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserReply {
}

message UpdateUserRequest {
  string id = 1;
  optional string first_name = 2 [json_name = "first_name"];
  optional string last_name = 3 [json_name = "last_name"];
  optional string country = 4;
  optional string nickname = 5;
  optional string password = 6;
  optional string email = 7;
}

message UpdateUserReply {
}

message ListUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
  map<string, string> filters = 3;
}